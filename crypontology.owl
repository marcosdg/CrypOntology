<?xml version="1.0"?>


<!DOCTYPE Ontology [
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY xml "http://www.w3.org/XML/1998/namespace" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
]>


<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="http://www.semanticweb.org/SIA/crypontology"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     ontologyIRI="http://www.semanticweb.org/SIA/crypontology">
    <Prefix name="" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Declaration>
        <Class IRI="#3DES"/>
    </Declaration>
    <Declaration>
        <Class IRI="#A5/1"/>
    </Declaration>
    <Declaration>
        <Class IRI="#A5/2"/>
    </Declaration>
    <Declaration>
        <Class IRI="#AES"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ARIA"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Accountability"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Active"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Affine"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Alberti"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Alberti&apos;s-Disk"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Anonymity"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Anubis"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Asymmetric"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Asynchronous"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Attacks"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Authenticity"/>
    </Declaration>
    <Declaration>
        <Class IRI="#AutoKey"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Availability"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Baiting"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Biclique-attack"/>
    </Declaration>
    <Declaration>
        <Class IRI="#BlockCipher"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Blowfish"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Bomba"/>
    </Declaration>
    <Declaration>
        <Class IRI="#BruteForceAttacks"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Caesar"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Collision-Resistant"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Collision-attack"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Collision-strong-attack"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Collision-weak-attack"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Computational-Security"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Confidentiality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Cool-boot-attack"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Cryptography"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Cryptology"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DES"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DesirableProperties"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Devices"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DictionaryAttacks"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Differential-Cryptanalysis"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ECDH"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ECDSA"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Eavesdropping"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ElGamal"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ElGamal-Elliptic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Enigma"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Feistel"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Frequency-Analysis"/>
    </Declaration>
    <Declaration>
        <Class IRI="#GSM"/>
    </Declaration>
    <Declaration>
        <Class IRI="#GuessingAttacks"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HashFunctions"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Higher-Order-Differential-Cryptanalysis"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Impossible-Differential-Cryptanalysis"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Index-of-Coincidence"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Integrity"/>
    </Declaration>
    <Declaration>
        <Class IRI="#KATSUMI"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Kasiski-examination"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Kerberos"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Key-autokey"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Loki"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Lorenz"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Lucifer"/>
    </Declaration>
    <Declaration>
        <Class IRI="#MAGENTA"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Man-in-the-Middle"/>
    </Declaration>
    <Declaration>
        <Class IRI="#MathematicalAnalysis"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Merkle-Hellman-Knapsack"/>
    </Declaration>
    <Declaration>
        <Class IRI="#MonoAlphabetic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#N-gram"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Nimbus"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Non-Repudiation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#OTP"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Parkerian-Hexad"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Passive"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Phishing"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PolyAlphabetic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Possession"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Pretexting"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Protocols"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RC4"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RFC-3826"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RSA"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SNMP"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Scytale"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Search-in-key-space"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Simon"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Slide-attack"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SocialEngineering"/>
    </Declaration>
    <Declaration>
        <Class IRI="#StreamCipher"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Strong-Resistance"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Substitution"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SubstitutionPermutation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Symmetric"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Synchronous"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TLS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Telephone-tapping"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Text-autokey"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Transposition"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Treyfer"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TrojanHorse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Truncated-Differential-Cryptanalysis"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Twofish"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Typex"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UES"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UnconditionalSecurity"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Utility"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Vigenere"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WAP"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WEP"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Weak-Resistance"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Wireless-Card"/>
    </Declaration>
    <Declaration>
        <Class IRI="#XOR"/>
    </Declaration>
    <Declaration>
        <Class IRI="#XSL"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Zodiac"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#basedOn"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#basedOnCipher"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#basedOnHash"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#basedOnProtocol"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasProperty"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#implements"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isBetterThan"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isFasterThan"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isLessInsecureThan"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#resistantTo"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#threatens"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#vulnerableTo"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#reference"/>
    </Declaration>
    <EquivalentClasses>
        <Class IRI="#Attacks"/>
        <ObjectUnionOf>
            <Class IRI="#Active"/>
            <Class IRI="#Passive"/>
        </ObjectUnionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#OTP"/>
        <Class IRI="#UnconditionalSecurity"/>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#StreamCipher"/>
        <ObjectUnionOf>
            <Class IRI="#Asynchronous"/>
            <Class IRI="#Synchronous"/>
        </ObjectUnionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Symmetric"/>
        <ObjectUnionOf>
            <Class IRI="#BlockCipher"/>
            <Class IRI="#StreamCipher"/>
        </ObjectUnionOf>
    </EquivalentClasses>
    <SubClassOf>
        <Class IRI="#3DES"/>
        <Class IRI="#Feistel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#3DES"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnCipher"/>
            <Class IRI="#DES"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#A5/1"/>
        <Class IRI="#GSM"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#A5/1"/>
        <ObjectExactCardinality cardinality="1">
            <ObjectProperty IRI="#isLessInsecureThan"/>
            <Class IRI="#A5/2"/>
        </ObjectExactCardinality>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#A5/2"/>
        <Class IRI="#GSM"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#A5/2"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnProtocol"/>
            <Class IRI="#A5/1"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AES"/>
        <Class IRI="#SubstitutionPermutation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AES"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnCipher"/>
            <ObjectUnionOf>
                <Class IRI="#3DES"/>
                <Class IRI="#DES"/>
                <Class IRI="#UES"/>
            </ObjectUnionOf>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AES"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <Class IRI="#Biclique-attack"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ARIA"/>
        <Class IRI="#SubstitutionPermutation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ARIA"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnCipher"/>
            <Class IRI="#AES"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ARIA"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <Class IRI="#Impossible-Differential-Cryptanalysis"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Accountability"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Active"/>
        <Class IRI="#Attacks"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Affine"/>
        <Class IRI="#MonoAlphabetic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Affine"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <ObjectUnionOf>
                <Class IRI="#BruteForceAttacks"/>
                <Class IRI="#DictionaryAttacks"/>
                <Class IRI="#Frequency-Analysis"/>
            </ObjectUnionOf>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Alberti"/>
        <Class IRI="#PolyAlphabetic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Alberti"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <Class IRI="#Kasiski-examination"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Alberti&apos;s-Disk"/>
        <Class IRI="#Devices"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Anonymity"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Anubis"/>
        <Class IRI="#SubstitutionPermutation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Asymmetric"/>
        <Class IRI="#Cryptography"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Asymmetric"/>
        <ObjectComplementOf>
            <Class IRI="#Symmetric"/>
        </ObjectComplementOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Asynchronous"/>
        <Class IRI="#StreamCipher"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Asynchronous"/>
        <ObjectComplementOf>
            <Class IRI="#Synchronous"/>
        </ObjectComplementOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Attacks"/>
        <Class IRI="#Cryptology"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Authenticity"/>
        <Class IRI="#Parkerian-Hexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AutoKey"/>
        <Class IRI="#PolyAlphabetic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AutoKey"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <ObjectUnionOf>
                <Class IRI="#BruteForceAttacks"/>
                <Class IRI="#DictionaryAttacks"/>
                <Class IRI="#Frequency-Analysis"/>
                <Class IRI="#GuessingAttacks"/>
            </ObjectUnionOf>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Availability"/>
        <Class IRI="#Parkerian-Hexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Baiting"/>
        <Class IRI="#SocialEngineering"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Biclique-attack"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#BlockCipher"/>
        <Class IRI="#Symmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Blowfish"/>
        <Class IRI="#SubstitutionPermutation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Blowfish"/>
        <ObjectExactCardinality cardinality="1">
            <ObjectProperty IRI="#hasProperty"/>
            <Class IRI="#Computational-Security"/>
        </ObjectExactCardinality>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Bomba"/>
        <Class IRI="#Devices"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Broadcasting"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#BruteForceAttacks"/>
        <Class IRI="#Search-in-key-space"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Caesar"/>
        <Class IRI="#MonoAlphabetic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Caesar"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <ObjectUnionOf>
                <Class IRI="#BruteForceAttacks"/>
                <Class IRI="#DictionaryAttacks"/>
                <Class IRI="#Frequency-Analysis"/>
            </ObjectUnionOf>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Collision-Resistant"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Collision-Resistant"/>
        <ObjectUnionOf>
            <Class IRI="#Strong-Resistance"/>
            <Class IRI="#Weak-Resistance"/>
        </ObjectUnionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Collision-attack"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Collision-strong-attack"/>
        <Class IRI="#Collision-attack"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Collision-weak-attack"/>
        <Class IRI="#Collision-attack"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Computational-Security"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Confidentiality"/>
        <Class IRI="#Parkerian-Hexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Cool-boot-attack"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Cryptography"/>
        <Class IRI="#Cryptology"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Cryptography"/>
        <ObjectUnionOf>
            <Class IRI="#Asymmetric"/>
            <Class IRI="#DesirableProperties"/>
            <Class IRI="#HashFunctions"/>
            <Class IRI="#Symmetric"/>
        </ObjectUnionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Cryptology"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DES"/>
        <Class IRI="#Feistel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DesirableProperties"/>
        <Class IRI="#Cryptography"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Devices"/>
        <Class IRI="#Cryptology"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DictionaryAttacks"/>
        <Class IRI="#Search-in-key-space"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Differential-Cryptanalysis"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ECDH"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ECDH"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#implements"/>
            <Class IRI="#ElGamal-Elliptic"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ECDSA"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ECDSA"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#implements"/>
            <Class IRI="#ElGamal-Elliptic"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Easy-and-Fast-to-calculate"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Eavesdropping"/>
        <Class IRI="#Passive"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ElGamal"/>
        <Class IRI="#Asymmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ElGamal-Elliptic"/>
        <Class IRI="#Asymmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Enigma"/>
        <Class IRI="#Devices"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Feistel"/>
        <Class IRI="#BlockCipher"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Fixed-length-digest"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Frequency-Analysis"/>
        <Class IRI="#MathematicalAnalysis"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#GOST"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#GSM"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#GSM"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#implements"/>
            <Class IRI="#KATSUMI"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#GuessingAttacks"/>
        <Class IRI="#Search-in-key-space"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HAVAL"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HashFunctions"/>
        <Class IRI="#Cryptography"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Higher-Order-Differential-Cryptanalysis"/>
        <Class IRI="#Differential-Cryptanalysis"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Impossible-Differential-Cryptanalysis"/>
        <Class IRI="#Differential-Cryptanalysis"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Index-of-Coincidence"/>
        <Class IRI="#MathematicalAnalysis"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Integrity"/>
        <Class IRI="#Parkerian-Hexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#KATSUMI"/>
        <Class IRI="#SubstitutionPermutation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Kasiski-examination"/>
        <Class IRI="#MathematicalAnalysis"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Kerberos"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Key-autokey"/>
        <Class IRI="#AutoKey"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Loki"/>
        <Class IRI="#Feistel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Loki"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnCipher"/>
            <Class IRI="#DES"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Lorenz"/>
        <Class IRI="#Devices"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Lucifer"/>
        <Class IRI="#Feistel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MAGENTA"/>
        <Class IRI="#SubstitutionPermutation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MD"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MD2"/>
        <Class IRI="#MD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MD4"/>
        <Class IRI="#MD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MD5"/>
        <Class IRI="#MD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MD5"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnHash"/>
            <Class IRI="#MD4"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MD5"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <Class IRI="#MathematicalAnalysis"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Man-in-the-Middle"/>
        <Class IRI="#Eavesdropping"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MathematicalAnalysis"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Merkle-Hellman-Knapsack"/>
        <Class IRI="#Asymmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MonoAlphabetic"/>
        <Class IRI="#Substitution"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#N-gram"/>
        <Class IRI="#Frequency-Analysis"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Nimbus"/>
        <Class IRI="#SubstitutionPermutation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Nimbus"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <Class IRI="#Differential-Cryptanalysis"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Non-Repudiation"/>
        <Class IRI="#Parkerian-Hexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#OTP"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PANAMA"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Parkerian-Hexad"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Passive"/>
        <Class IRI="#Attacks"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Phishing"/>
        <Class IRI="#SocialEngineering"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PolyAlphabetic"/>
        <Class IRI="#Substitution"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Possession"/>
        <Class IRI="#Parkerian-Hexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Pretexting"/>
        <Class IRI="#SocialEngineering"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Protocols"/>
        <Class IRI="#Cryptology"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RC4"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RC4"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#implements"/>
            <Class IRI="#RSA"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RFC-3826"/>
        <Class IRI="#SNMP"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RFC-3826"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#implements"/>
            <Class IRI="#AES"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RIPEMD"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RIPEMD-128"/>
        <Class IRI="#RIPEMD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RIPEMD-128/256"/>
        <Class IRI="#RIPEMD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RIPEMD-160"/>
        <Class IRI="#RIPEMD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RIPEMD-320"/>
        <Class IRI="#RIPEMD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RSA"/>
        <Class IRI="#Asymmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RSA"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <Class IRI="#Man-in-the-Middle"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RTR0"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RadioGatun"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RadioGatun"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnHash"/>
            <Class IRI="#PANAMA"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-0"/>
        <Class IRI="#SHA"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-1"/>
        <Class IRI="#SHA"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-1"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnHash"/>
            <Class IRI="#MD4"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2"/>
        <Class IRI="#SHA"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-224"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-256"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-384"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-512"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-512/224"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-512/224"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnHash"/>
            <Class IRI="#SHA-2-512"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-512/256"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-512/256"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnHash"/>
            <Class IRI="#SHA-2-512"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-3"/>
        <Class IRI="#SHA"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-3"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnHash"/>
            <Class IRI="#RadioGatun"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-3-224"/>
        <Class IRI="#SHA-3"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-3-256"/>
        <Class IRI="#SHA-3"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-3-384"/>
        <Class IRI="#SHA-3"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-3-512"/>
        <Class IRI="#SHA-3"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SNMP"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Scytale"/>
        <Class IRI="#Transposition"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Search-in-key-space"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Simon"/>
        <Class IRI="#Feistel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Slide-attack"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SocialEngineering"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#StreamCipher"/>
        <Class IRI="#Symmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Strong-Resistance"/>
        <Class IRI="#Collision-Resistant"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Substitution"/>
        <Class IRI="#Synchronous"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Substitution"/>
        <ObjectUnionOf>
            <Class IRI="#MonoAlphabetic"/>
            <Class IRI="#PolyAlphabetic"/>
        </ObjectUnionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SubstitutionPermutation"/>
        <Class IRI="#BlockCipher"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Symmetric"/>
        <Class IRI="#Cryptography"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Synchronous"/>
        <Class IRI="#StreamCipher"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Synchronous"/>
        <ObjectUnionOf>
            <Class IRI="#Substitution"/>
            <Class IRI="#Transposition"/>
        </ObjectUnionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TLS"/>
        <Class IRI="#RC4"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TLS"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#implements"/>
            <ObjectUnionOf>
                <Class IRI="#MD5"/>
                <Class IRI="#SHA-1"/>
            </ObjectUnionOf>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Telephone-tapping"/>
        <Class IRI="#Eavesdropping"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Text-autokey"/>
        <Class IRI="#AutoKey"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Tiger"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Tiger-192/128/160"/>
        <Class IRI="#Tiger"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Tiger2"/>
        <Class IRI="#Tiger"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Transposition"/>
        <Class IRI="#Synchronous"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Treyfer"/>
        <Class IRI="#SubstitutionPermutation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Treyfer"/>
        <ObjectExactCardinality cardinality="1">
            <ObjectProperty IRI="#hasProperty"/>
            <Class IRI="#Easy-and-Fast-to-calculate"/>
        </ObjectExactCardinality>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TrojanHorse"/>
        <Class IRI="#SocialEngineering"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Truncated-Differential-Cryptanalysis"/>
        <Class IRI="#Differential-Cryptanalysis"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Twofish"/>
        <Class IRI="#SubstitutionPermutation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Twofish"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#isLessInsecureThan"/>
            <Class IRI="#DES"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Twofish"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <ObjectUnionOf>
                <Class IRI="#Impossible-Differential-Cryptanalysis"/>
                <Class IRI="#Truncated-Differential-Cryptanalysis"/>
            </ObjectUnionOf>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Typex"/>
        <Class IRI="#Devices"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UES"/>
        <Class IRI="#SubstitutionPermutation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UnconditionalSecurity"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Unidirectional"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Utility"/>
        <Class IRI="#Parkerian-Hexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Vigenere"/>
        <Class IRI="#PolyAlphabetic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Vigenere"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#basedOnCipher"/>
            <Class IRI="#Caesar"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Vigenere"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <Class IRI="#Kasiski-examination"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WAP"/>
        <Class IRI="#RC4"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WAP"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#basedOnProtocol"/>
            <Class IRI="#WEP"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WEP"/>
        <Class IRI="#RC4"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WHIRLPOOL"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Weak-Resistance"/>
        <Class IRI="#Collision-Resistant"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Wireless-Card"/>
        <Class IRI="#Devices"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#XOR"/>
        <Class IRI="#PolyAlphabetic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#XOR"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <Class IRI="#Frequency-Analysis"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#XSL"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Zodiac"/>
        <Class IRI="#Feistel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Zodiac"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#vulnerableTo"/>
            <Class IRI="#Impossible-Differential-Cryptanalysis"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <DisjointClasses>
        <Class IRI="#3DES"/>
        <Class IRI="#DES"/>
        <Class IRI="#Loki"/>
        <Class IRI="#Lucifer"/>
        <Class IRI="#Simon"/>
        <Class IRI="#Zodiac"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#AES"/>
        <Class IRI="#ARIA"/>
        <Class IRI="#Anubis"/>
        <Class IRI="#Blowfish"/>
        <Class IRI="#KATSUMI"/>
        <Class IRI="#MAGENTA"/>
        <Class IRI="#Nimbus"/>
        <Class IRI="#Treyfer"/>
        <Class IRI="#Twofish"/>
        <Class IRI="#UES"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Accountability"/>
        <Class IRI="#Anonymity"/>
        <Class IRI="#Broadcasting"/>
        <Class IRI="#Collision-Resistant"/>
        <Class IRI="#Computational-Security"/>
        <Class IRI="#Easy-and-Fast-to-calculate"/>
        <Class IRI="#Fixed-length-digest"/>
        <Class IRI="#Parkerian-Hexad"/>
        <Class IRI="#Unidirectional"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Active"/>
        <Class IRI="#Passive"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Affine"/>
        <Class IRI="#Caesar"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Alberti"/>
        <Class IRI="#AutoKey"/>
        <Class IRI="#Vigenere"/>
        <Class IRI="#XOR"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Alberti&apos;s-Disk"/>
        <Class IRI="#Bomba"/>
        <Class IRI="#Enigma"/>
        <Class IRI="#Lorenz"/>
        <Class IRI="#Typex"/>
        <Class IRI="#Wireless-Card"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Asymmetric"/>
        <Class IRI="#DesirableProperties"/>
        <Class IRI="#HashFunctions"/>
        <Class IRI="#Symmetric"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Asynchronous"/>
        <Class IRI="#Synchronous"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Authenticity"/>
        <Class IRI="#Availability"/>
        <Class IRI="#Confidentiality"/>
        <Class IRI="#Integrity"/>
        <Class IRI="#Non-Repudiation"/>
        <Class IRI="#Possession"/>
        <Class IRI="#Utility"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Baiting"/>
        <Class IRI="#Phishing"/>
        <Class IRI="#Pretexting"/>
        <Class IRI="#TrojanHorse"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Biclique-attack"/>
        <Class IRI="#Collision-attack"/>
        <Class IRI="#Cool-boot-attack"/>
        <Class IRI="#Differential-Cryptanalysis"/>
        <Class IRI="#MathematicalAnalysis"/>
        <Class IRI="#Search-in-key-space"/>
        <Class IRI="#Slide-attack"/>
        <Class IRI="#SocialEngineering"/>
        <Class IRI="#XSL"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#BlockCipher"/>
        <Class IRI="#StreamCipher"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#BruteForceAttacks"/>
        <Class IRI="#DictionaryAttacks"/>
        <Class IRI="#GuessingAttacks"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Collision-strong-attack"/>
        <Class IRI="#Collision-weak-attack"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ECDH"/>
        <Class IRI="#ECDSA"/>
        <Class IRI="#GSM"/>
        <Class IRI="#Kerberos"/>
        <Class IRI="#RC4"/>
        <Class IRI="#SNMP"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ElGamal"/>
        <Class IRI="#ElGamal-Elliptic"/>
        <Class IRI="#Merkle-Hellman-Knapsack"/>
        <Class IRI="#RSA"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Frequency-Analysis"/>
        <Class IRI="#Index-of-Coincidence"/>
        <Class IRI="#Kasiski-examination"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#GOST"/>
        <Class IRI="#HAVAL"/>
        <Class IRI="#MD"/>
        <Class IRI="#PANAMA"/>
        <Class IRI="#RIPEMD"/>
        <Class IRI="#RTR0"/>
        <Class IRI="#RadioGatun"/>
        <Class IRI="#SHA"/>
        <Class IRI="#Tiger"/>
        <Class IRI="#WHIRLPOOL"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Higher-Order-Differential-Cryptanalysis"/>
        <Class IRI="#Impossible-Differential-Cryptanalysis"/>
        <Class IRI="#Truncated-Differential-Cryptanalysis"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Key-autokey"/>
        <Class IRI="#Text-autokey"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#MD2"/>
        <Class IRI="#MD4"/>
        <Class IRI="#MD5"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Man-in-the-Middle"/>
        <Class IRI="#Telephone-tapping"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#MonoAlphabetic"/>
        <Class IRI="#PolyAlphabetic"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#RIPEMD-128"/>
        <Class IRI="#RIPEMD-128/256"/>
        <Class IRI="#RIPEMD-160"/>
        <Class IRI="#RIPEMD-320"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#SHA-0"/>
        <Class IRI="#SHA-1"/>
        <Class IRI="#SHA-2"/>
        <Class IRI="#SHA-3"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#SHA-2-224"/>
        <Class IRI="#SHA-2-256"/>
        <Class IRI="#SHA-2-384"/>
        <Class IRI="#SHA-2-512"/>
        <Class IRI="#SHA-2-512/224"/>
        <Class IRI="#SHA-2-512/256"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#SHA-3-224"/>
        <Class IRI="#SHA-3-256"/>
        <Class IRI="#SHA-3-384"/>
        <Class IRI="#SHA-3-512"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Strong-Resistance"/>
        <Class IRI="#Weak-Resistance"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Substitution"/>
        <Class IRI="#Transposition"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#Tiger-192/128/160"/>
        <Class IRI="#Tiger2"/>
    </DisjointClasses>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#basedOnCipher"/>
        <ObjectProperty IRI="#basedOn"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#basedOnHash"/>
        <ObjectProperty IRI="#basedOn"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#basedOnProtocol"/>
        <ObjectProperty IRI="#basedOn"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isFasterThan"/>
        <ObjectProperty IRI="#isBetterThan"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isLessInsecureThan"/>
        <ObjectProperty IRI="#isBetterThan"/>
    </SubObjectPropertyOf>
    <InverseObjectProperties>
        <ObjectProperty IRI="#vulnerableTo"/>
        <ObjectProperty IRI="#threatens"/>
    </InverseObjectProperties>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#basedOnCipher"/>
    </InverseFunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#basedOnHash"/>
    </InverseFunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#basedOnProtocol"/>
    </InverseFunctionalObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#basedOn"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#basedOnCipher"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#basedOnHash"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#basedOnProtocol"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#hasProperty"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#implements"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#isBetterThan"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#isFasterThan"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#isLessInsecureThan"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#resistantTo"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#threatens"/>
    </AsymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#vulnerableTo"/>
    </AsymmetricObjectProperty>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#basedOnCipher"/>
        <ObjectUnionOf>
            <Class IRI="#Asymmetric"/>
            <Class IRI="#Symmetric"/>
        </ObjectUnionOf>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#basedOnHash"/>
        <Class IRI="#HashFunctions"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#basedOnProtocol"/>
        <Class IRI="#Protocols"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasProperty"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#implements"/>
        <Class IRI="#Protocols"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isBetterThan"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isFasterThan"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isLessInsecureThan"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#resistantTo"/>
        <ObjectUnionOf>
            <Class IRI="#Asymmetric"/>
            <Class IRI="#Devices"/>
            <Class IRI="#HashFunctions"/>
            <Class IRI="#Protocols"/>
            <Class IRI="#Symmetric"/>
        </ObjectUnionOf>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#threatens"/>
        <Class IRI="#Attacks"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#vulnerableTo"/>
        <ObjectUnionOf>
            <Class IRI="#Asymmetric"/>
            <Class IRI="#Devices"/>
            <Class IRI="#HashFunctions"/>
            <Class IRI="#Protocols"/>
            <Class IRI="#Symmetric"/>
        </ObjectUnionOf>
    </ObjectPropertyDomain>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#basedOnCipher"/>
        <ObjectUnionOf>
            <Class IRI="#Asymmetric"/>
            <Class IRI="#Symmetric"/>
        </ObjectUnionOf>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#basedOnHash"/>
        <Class IRI="#HashFunctions"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#basedOnProtocol"/>
        <Class IRI="#Protocols"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasProperty"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#implements"/>
        <ObjectUnionOf>
            <Class IRI="#Asymmetric"/>
            <Class IRI="#HashFunctions"/>
            <Class IRI="#Symmetric"/>
        </ObjectUnionOf>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isBetterThan"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isFasterThan"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isLessInsecureThan"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#resistantTo"/>
        <Class IRI="#Attacks"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#threatens"/>
        <ObjectUnionOf>
            <Class IRI="#Asymmetric"/>
            <Class IRI="#Devices"/>
            <Class IRI="#HashFunctions"/>
            <Class IRI="#Protocols"/>
            <Class IRI="#Symmetric"/>
        </ObjectUnionOf>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#vulnerableTo"/>
        <Class IRI="#Attacks"/>
    </ObjectPropertyRange>
    <DisjointObjectProperties>
        <ObjectProperty IRI="#basedOnCipher"/>
        <ObjectProperty IRI="#basedOnHash"/>
    </DisjointObjectProperties>
    <DisjointObjectProperties>
        <ObjectProperty IRI="#basedOnCipher"/>
        <ObjectProperty IRI="#basedOnProtocol"/>
    </DisjointObjectProperties>
    <DisjointObjectProperties>
        <ObjectProperty IRI="#basedOnHash"/>
        <ObjectProperty IRI="#basedOnProtocol"/>
    </DisjointObjectProperties>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#3DES</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Triple_des</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#3DES</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Variant of the DES cipher that applies three times the cryptographic mechanism with the aim of increasing its security.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#A5/1</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/A5/1</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#A5/1</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Implementation used in Europe and EEUU.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#A5/2</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/A5/2</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#A5/2</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Weak version used in many countries.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#AES</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Advanced_Encryption_Standard</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#AES</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">AES (Advanced Encryption Standard) is based on the Rijndael cipher. Thus, unlike its predecesor DES, it does not use a Feistel Network. AES was approved by the NIST (National Security Agency) after realizing that DES was insecure</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#ARIA</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/ARIA_%28cipher%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ARIA</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">ARIA is a block cipher designed in 2003 by a large group of South Korean researchers. In 2004, the Korean Agency for Technology and Standards selected it as a standard cryptographic technique.
The algorithm uses a substitution-permutation network structure based on AES. The interface is the same as AES: 128-bit block size with key size of 128, 192, or 256 bits. The number of rounds is 12, 14, or 16, depending on the key size. ARIA uses two 8×8-bit S-boxes and their inverses in alternate rounds; one of these is the Rijndael S-box.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Accountability</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://www.itsecurity.com/security.htm?s=175</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Accountability</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Allows to trace the origin of an activity made by an entity. That is, allows to identify the source of the attack to the system.  </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Active</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.citizendium.org/wiki/Active_attack</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Active</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">An &apos;active&apos; attack refers to the situation in which the attacker modifies some part of the system intended to be broken. For instance, modifying the messages, blocking the communications channel, code injection, among others.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Affine</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Affine_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Affine</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">In this algorithm each letter in an alphabet is mapped to its numeric equivalent, encrypted using a simple mathematical function, and converted back to a letter.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Alberti</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://es.wikipedia.org/wiki/Cifrado_de_Alberti</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Alberti</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Created by Leon Battista Alberti, is the first polyalphabetic substitution symmetric algorithm known.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Alberti&apos;s-Disk</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://es.wikipedia.org/wiki/Cifrado_de_Alberti</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Alberti&apos;s-Disk</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Device that allows to implement the Alberti&apos;s algorithm</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Anonymity</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Anonymous_P2P</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Anonymity</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Anonymous_web_browsing</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Anonymity</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Data_anonymization</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Anonymity</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Allows to the user of the system to hide its identification in a communication.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Anubis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Anubis_%28cipher%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Anubis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Anubis is a block cipher designed by Vincent Rijmen and Paulo S. L. M. Barreto as an entrant in the NESSIE project, a former research program initiated by the European Commission in 2000 for the identification of new cryptographic algorithms..</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Asymmetric</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This type of cryptography uses a private key for each user and a public key for everyone. The first is used to decipher and the second to cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Asynchronous</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Stream_cipher#Self-synchronizing_stream_ciphers</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Asynchronous</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The key stream also depends on the ciphertext.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Attacks</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Category:Cryptographic_attacks</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Attacks</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">A cryptographic attack is a method for circumventing the security of a cryptographic system by finding a weakness in a code, cipher, cryptographic protocol or key management scheme. This process is also called &quot;Cryptanalysis&quot;.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Authenticity</IRI>
        <Literal datatypeIRI="&xsd;string">Authenticity refers to the veracity of the claim of origin or authorship of the information.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#AutoKey</IRI>
        <Literal datatypeIRI="&xsd;string">http://cryptography.wikia.com/wiki/Autokey_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#AutoKey</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">An autokey cipher (also known as the autoclave cipher) is a cipher which incorporates the message (the plaintext) into the key.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Availability</IRI>
        <Literal datatypeIRI="&xsd;string">Availability means having timely access to information. For example, a disk crash or denial-of-service attacks both cause a breach of availability. Any delay that exceeds the expected service levels for a system can be described as a breach of availability.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Baiting</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Baiting is like the real-world Trojan Horse that uses physical media and relies on the curiosity or greed of the victim.
In this attack, the attacker leaves a malware infected floppy disk, CD-ROM, or USB flash drive in a location sure to be found (bathroom, elevator, sidewalk, parking lot), gives it a legitimate looking and curiosity-piquing label, and simply waits for the victim to use the device.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Biclique-attack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Biclique_attack</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Biclique-attack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The biclique attack is a method of cryptanalysis known for having broken both full AES and full IDEA, though only with slight advantage over brute force. It has also been applied to the KASUMI cipher and preimage resistance of the Skein-512 and SHA-2 hash functions.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#BlockCipher</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Block_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#BlockCipher</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Data is ciphered in blocks instead bit by bit.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Blowfish</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Blowfish_%28cipher%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Blowfish</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Blowfish is a symmetric-key block cipher, designed in 1993 by Bruce Schneier and included in a large number of cipher suites and encryption products. Blowfish provides a good encryption rate in software and no effective cryptanalysis of it has been found to date.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Bomba</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Bomba_%28cryptography%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Bomba</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The bomba, or bomba kryptologiczna (Polish for &quot;bomb&quot; or &quot;cryptologic bomb&quot;) was a special-purpose machine designed about October 1938 by Polish Cipher Bureau cryptologist Marian Rejewski to break German Enigma-machine ciphers.

</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Broadcasting</IRI>
        <Literal datatypeIRI="&xsd;string">h(D) must involve every bit of D. If one bit is changed in D, h(D) should change about half of his bits.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#BruteForceAttacks</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Brute-force_attack</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#BruteForceAttacks</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Tries all possible combinations of symbols in the key space in an ordered way.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Caesar</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Caesar_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Caesar</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is one of the simplest and most widely known encryption techniques.In the algorithm each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Collision-Resistant</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A hash function will never be an injective function, therefore always will exist collisions. Known  the pair (D, D&apos;) such that h(D)=h(D&apos;) we can distinguish between weak resistance and strong resistance.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Collision-attack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Collision_attack</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Collision-attack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A collision attack on a cryptographic hash tries to find two inputs producing the same hash value, i.e. a hash collision. In contrast to a preimage attack the hash value is not specified.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Collision-strong-attack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Given two different prefixes p1, p2 find two appendages m1 and m2 such that hash(p1 ∥ m1) = hash(p2 ∥ m2) (where ∥ is the concatenation operation).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Collision-weak-attack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Find two different messages m1 and m2 such that hash(m1) = hash(m2).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Computational-Security</IRI>
        <Literal datatypeIRI="&xsd;string">Said of a cipher that cannot be broken with the current computer technology within a period short enough to be practicable</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Confidentiality</IRI>
        <Literal datatypeIRI="&xsd;string">Confidentiality refers to limits on who can get what kind of information.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Cool-boot-attack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Cold_boot_attack</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Cool-boot-attack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">In cryptography, a cold boot attack (or to a lesser extent, a platform reset attack) is a type of side channel attack in which an attacker with physical access to a computer is able to retrieve encryption keys from a running operating system after using a cold reboot to restart the machine. The attack relies on the data remanence property of DRAM and SRAM to retrieve memory contents which remain readable in the seconds to minutes after power has been removed.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Cryptography</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Cryptography</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Cryptography</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral"> Is the practice and study of techniques for secure communication in the presence of third parties (called adversaries)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Cryptology</IRI>
        <Literal datatypeIRI="&xsd;string">Cryptology is the science derived from Mathematics that is concerned with data communication and storage in a secure way.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#DES</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Data_Encryption_Standard</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DES</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Algorithm based on the Lucifer cipher. Predecesor of 3DES (Triple DES) and AES.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DesirableProperties</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Properties that every Cryptographic system intended to be secure should consider or include.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Devices</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Hardware devices that uses cryptographic algorithms</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#DictionaryAttacks</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Dictionary_attack</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DictionaryAttacks</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Unlike a brute-force attack, a dictionary attack restricts the search space to a given collection of words or letters. Thus, it may not find the correct key.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Differential-Cryptanalysis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Differential_cryptanalysis</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Differential-Cryptanalysis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Differential cryptanalysis is a general form of cryptanalysis applicable primarily to block ciphers, but also to stream ciphers and cryptographic hash functions. In the broadest sense, it is the study of how differences in an input can affect the resultant difference at the output. In the case of a block cipher, it refers to a set of techniques for tracing differences through the network of transformations, discovering where the cipher exhibits non-random behavior, and exploiting such properties to recover the secret key.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#ECDH</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/ECDH</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ECDH</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The full name of this algorithm is EC Diffie-Hellman. Is based on the ElGamal elliptic algorithm.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#ECDSA</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/ECDSA</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ECDSA</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The full name of this protocol is EC Digital Signature Algorithm. Is based on the ELGamal elliptic algorithm</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Easy-and-Fast-to-calculate</IRI>
        <Literal datatypeIRI="&xsd;string">The algorithm is easy to calculate and fast to execute.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Eavesdropping</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">http://encyclopedia2.thefreedictionary.com/Eavesdropping</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Eavesdropping</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">http://www.etymonline.com/index.php?term=eavesdropper&amp;allowed_in_frame=0</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Eavesdropping</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Secretely listening to private conversations without the authorization of the parties.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ElGamal</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Scheme based in discrete logarithm math problems, based in the Diffie-Hellman idea</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ElGamal-Elliptic</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is like the classical ElGamal algorithm but uses elliptic arithmetic.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Enigma</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Enigma_machine</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Enigma</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Machine invented at the end of the first world war, it uses the Alberti algorithm</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Feistel</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Feistel_network</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Fixed-length-digest</IRI>
        <Literal datatypeIRI="&xsd;string">Summary size of h(D) should be fixed (defined by function), without depending on the size of D</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Frequency-Analysis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Frequency_analysis</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Frequency-Analysis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is the study of the frequency of letters or groups of letters in a ciphertext. The method is used as an aid to breaking classical ciphers.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#GOST</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/GOST_%28hash_function%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#GOST</IRI>
        <Literal datatypeIRI="&xsd;string">Is a 256-bit cryptographic hash function. It was initially defined in the Russian national standard GOST R 34.11-94 Information Technology - Cryptographic Information Security - Hash Function. The equivalent standard used by other member-states of the CIS is GOST 34.311-95.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#GSM</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/GSM</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#GSM</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Protocol used in mobile communications. Uses the KATSUMI algorithm</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#GuessingAttacks</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The attacker uses personal information (special dates, favourite hobbies, names, acronyms, ...) from a known user to reduce the search space of keys.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#HAVAL</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/HAVAL</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#HAVAL</IRI>
        <Literal datatypeIRI="&xsd;string">Is a cryptographic hash function, can produce hashes of different lengths and hashes in lengths of 128 bits, 160 bits, 192 bits, 224 bits, and 256 bits. HAVAL also allows users to specify the number of rounds (3, 4, or 5) to be used to generate the hash. It was invented by Yuliang Zheng, Josef Pieprzyk, and Jennifer Seberry in 1992.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#HashFunctions</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/Cryptographic_hash_function</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#HashFunctions</IRI>
        <Literal datatypeIRI="&xsd;string">A cryptographic hash function is a hash function that takes an arbitrary block of data and returns a fixed-size bit string, the cryptographic hash value, such that any (accidental or intentional) change to the data will (with very high probability) change the hash value. The data to be encoded are often called the message, and the hash value is sometimes called the message digest or simply digest.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Higher-Order-Differential-Cryptanalysis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Higher-order_differential_cryptanalysis</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Higher-Order-Differential-Cryptanalysis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Higher-order differential cryptanalysis is a generalization of differential cryptanalysis, an attack against block ciphers. Developed in 1994 by Lars Knudsen, the technique has been applied to a number of ciphers. Whereas ordinary differential cryptanalysis analyzes the differences between two texts, the higher-order variant considers differences between differences, etc. It has been shown to be more powerful than a first-order attack in some cases (see KN-Cipher).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Impossible-Differential-Cryptanalysis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Impossible_differential_cryptanalysis</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Impossible-Differential-Cryptanalysis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">In cryptography, impossible differential cryptanalysis is a form of differential cryptanalysis for block ciphers. While ordinary differential cryptanalysis tracks differences that propagate through the cipher with greater than expected probability, impossible differential cryptanalysis exploits differences that are impossible (having probability 0) at some intermediate state of the cipher algorithm.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Index-of-Coincidence</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Index_of_coincidence</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Index-of-Coincidence</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Index of coincidence counting is the technique (invented by William F. Friedman) of putting two texts side-by-side and counting the number of times that identical letters appear in the same position in both texts. This count, either as a ratio of the total or normalized by dividing by the expected count for a random source model, is known as the index of coincidence.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Integrity</IRI>
        <Literal datatypeIRI="&xsd;string">Integrity refers to being correct or consistent with the intended state of information. Any unauthorized modification of data, whether deliberate or accidental, is a breach of data integrity.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#KATSUMI</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/KASUMI_%28block_cipher%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#KATSUMI</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">KASUMI is a block cipher used in UMTS, GSM, and GPRS mobile communications systems. In UMTS, KASUMI is used in the confidentiality (f8) and integrity algorithms (f9) with names UEA1 and UIA1, respectively. In GSM, KATSUMI is used in the A5/3 key stream generator and in GPRS in the GEA3 key stream generator.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Kasiski-examination</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Kasiski_examination</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Kasiski-examination</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral"> Kasiski examination (also referred to as Kasiski&apos;s Test or Kasiski&apos;s Method) is a method of attacking polyalphabetic substitution ciphers, such as the Vigenère cipher. It was first published by Friedrich Kasiski in 1863, but seems to have been independently discovered by Charles Babbage as early as 1846.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Kerberos</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Kerberos_%28protocol%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Kerberos</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is a computer network authentication protocol which works on the basis of &apos;tickets&apos; to allow nodes communicating over a non-secure network to prove their identity to one another in a secure manner. Its designers aimed it primarily at a client–server model and it provides mutual authentication—both the user and the server verify each other&apos;s identity. Kerberos protocol messages are protected against eavesdropping and replay attacks.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Key-autokey</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Uses previous members of the keystream to determine the next element in the keystream. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Loki</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/LOKI</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Loki</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Symmetric-key block ciphers designed as possible replacements for the Data Encryption Standard (DES). The ciphers were developed based on a body of work analysing DES, and are very similar to DES in structure. The LOKI algorithms were named for Loki, the god of mischief in Norse mythology.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Lorenz</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Lorenz_SZ_40/42</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Lorenz</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">German Army Machine used during the second world war, it uses the Vernam algorithm.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Lucifer</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Lucifer_%28cipher%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Lucifer</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">First algorithm based in Feistel network.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#MAGENTA</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/MAGENTA</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MAGENTA</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">In cryptography, MAGENTA is a symmetric key block cipher developed by Michael Jacobson Jr. and Klaus Huber for Deutsche Telekom.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MD</IRI>
        <Literal datatypeIRI="&xsd;string">Are a set of cryptographic hash functions developed by Ronald Rivest in 1989 (MD2), 1990 (MD4) and 1992 (MD5)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#MD2</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/MD2_%28cryptography%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MD2</IRI>
        <Literal datatypeIRI="&xsd;string">The algorithm is optimized for 8-bit computers.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#MD4</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/MD4</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MD4</IRI>
        <Literal datatypeIRI="&xsd;string">The digest length is 128 bits. The algorithm has influenced later designs, such as the MD5, SHA-1 and RIPEMD algorithms.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#MD5</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/MD5</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MD5</IRI>
        <Literal datatypeIRI="&xsd;string">The MD5 message-digest algorithm is a widely used cryptographic hash function producing a 128-bit (16-byte) hash value, typically expressed in text format as a 32 digit hexadecimal number. MD5 has been utilized in a wide variety of cryptographic applications, and is also commonly used to verify data integrity.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Man-in-the-Middle</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Man-in-the-middle_attack</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Man-in-the-Middle</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">The Man-in-the-Middle attack (often abbreviated MITM, MitM, MIM, MiM, MITMA) in Cryptography and Computer Security is a form of active eavesdropping in which the attacker makes independent connections with the victims and relays messages between them, making them believe that they are talking directly to each other over a private connection, when in fact the entire conversation is controlled by the attacker. The attacker must be able to intercept all messages going between the two victims and inject new ones, which is straightforward in many circumstances (for example, an attacker within reception range of an unencrypted Wi-Fi wireless access point, can insert himself as a man-in-the-middle).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#MathematicalAnalysis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This class of attacks are mainly focused on the analysis of the statistical properties of the cipher text with the aim of extracting relevant information to decipher it.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Merkle-Hellman-Knapsack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Based in the subset-sum problem, probably it was the first algorithm with public key.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MonoAlphabetic</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">One letter is substituted by just one  letter.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#N-gram</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/N-gram</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#N-gram</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">n-gram is a contiguous sequence of n items from a given sequence of text or speech. The items can be phonemes, syllables, letters, words or base pairs according to the application. The n-grams typically are collected from a text or speech corpus.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Nimbus</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Nimbus_%28cipher%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Nimbus</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">In cryptography, Nimbus is a block cipher invented by Alexis Machado in 2000. The algorithm uses a 128-bit key. It operates on blocks of 64 bits and consists of 5 rounds of encryption. The round function is exceedingly simple. In each round the block is XORed with a subkey, the order of its bits is reversed, and then it is multiplied mod 264 by another subkey, which is forced to be odd.
Nimbus was broken by Vladimir Furman; he found a differential attack using only 256 chosen plaintexts.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Non-Repudiation</IRI>
        <Literal datatypeIRI="&xsd;string">Non-repudiation refers to a state of affairs where the purported maker of a statement will not be able to successfully challenge the validity of the statement or contract. If an attacker could repudiate a message we might not be able to identify such individual as malicious.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#OTP</IRI>
        <Literal datatypeIRI="&xsd;string">A steam cipher is called one-time pad if the key steam s0, s1, s2,.... is generated by a true random number generator (first condition), and the key steam is only known to the lefitimate communicating parties (second condition), and every key steam bit si is only user once.
The one-time pad is unconditionally secure. 
</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#PANAMA</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/PANAMA</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#PANAMA</IRI>
        <Literal datatypeIRI="&xsd;string"> Is a cryptography primitive which can be used both as a hash function and a stream cipher, the stream cipher uses a 256-bit key and the performance of the cipher is very good reaching 2 cycles per byte. Based on StepRightUp, it was designed by Joan Daemen and Craig Clapp and presented in the paper Fast Hashing and Stream Encryption with PANAMA on the Fast Software Encryption (FSE) conference 1998. The cipher has influenced several other designs, for example MUGI.
</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Parkerian-Hexad</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Parkerian_hexad</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Passive</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.citizendium.org/wiki/Passive_attack</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Passive</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This type of attacks just listen the network to recover usefull info from it.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Phishing</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is a technique of fraudulently obtaining private information. Typically, the phisher sends an e-mail that appears to come from a legitimate business—a bank, or credit card company—requesting &quot;verification&quot; of information and warning of some dire consequence if it is not provided. The e-mail usually contains a link to a fraudulent web page that seems legitimate—with company logos and content—and has a form requesting everything from a home address to an ATM card&apos;s PIN.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#PolyAlphabetic</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">One letter can be substituted by many letters.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Possession</IRI>
        <Literal datatypeIRI="&xsd;string">Refers to whether the information is controled by authorized individuals. A situation where someone steals a SEALED envelope without the possibility to open it, would imply a possession breach. We also could think about someone intercepting an encrypted email but not being able to decrypt it. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Pretexting</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is the act of creating and using an invented scenario (the pretext) to engage a targeted victim in a manner that increases the chance the victim will divulge information or perform actions that would be unlikely in ordinary circumstances. An elaborate lie, it most often involves some prior research or setup and the use of this information for impersonation (e.g., date of birth, Social Security number, last bill amount) to establish legitimacy in the mind of the target.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Protocols</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Implementations currently used by different algorithms. Protocols are specifications or procedures, which are acepted as standards, on how to build a system for a particular purpose or functionality.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#RC4</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/ARC4</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RC4</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Official RSA based implementation, it can&apos;t be used with this name because the RSA Security Agency has never released the code,</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#RFC-3826</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://tools.ietf.org/html/rfc3826</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RFC-3826</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Implementation using AES</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#RIPEMD</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/RIPEMD</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RIPEMD</IRI>
        <Literal datatypeIRI="&xsd;string">RIPEMD (RACE Integrity Primitives Evaluation Message Digest) is a family of cryptographic hash functions developed in Leuven, Belgium, by Hans Dobbertin, Antoon Bosselaers and Bart Preneel at the COSIC research group at the Katholieke Universiteit Leuven, and first published in 1996. RIPEMD was based upon the design principles used in MD4, and is similar in performance to the more popular SHA-1.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RIPEMD-128</IRI>
        <Literal datatypeIRI="&xsd;string">Published in 1996. RIPEMD-128 was based upon the design principles used in MD4, and is similar in performance to the more popular SHA-1.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RIPEMD-128/256</IRI>
        <Literal datatypeIRI="&xsd;string">The 128-bit version was intended only as a drop-in replacement for the original RIPEMD, which was also 128-bit, and which had been found to have questionable security. The 256-bits versions diminish only the chance of accidental collision, and don&apos;t have higher levels of security.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RIPEMD-160</IRI>
        <Literal datatypeIRI="&xsd;string">Is a 160-bit version of the original RIPEMD, and the most common version in the family. RIPEMD-160 was designed in the open academic community.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RIPEMD-320</IRI>
        <Literal datatypeIRI="&xsd;string">The 320-bit versions diminish only the chance of accidental collision, and don&apos;t have higher levels of security (against preimage attacks) as compared to, respectively, RIPEMD-128 and RIPEMD-160.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RSA</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This algorithm is based in the difficulty to factorize big primes</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#RTR0</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/RTR0</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RTR0</IRI>
        <Literal datatypeIRI="&xsd;string">The RTR0 algorithm, originally build on Retter engine (eng. Savior) is a widely used cryptographic hash function producing a 160-bit (20-byte) hash value, typically expressed in text format as a 40 digit hexadecimal number.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#RadioGatun</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/RadioGat%C3%BAn</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RadioGatun</IRI>
        <Literal datatypeIRI="&xsd;string">Is a cryptographic hash primitive created by Guido Bertoni, Joan Daemen, Michaël Peeters, and Gilles Van Assche. It was first publicly presented at the NIST Second Cryptographic Hash Workshop, held in Santa Barbara, California, on August 24–25, 2006, as part of the NIST hash function competition.
Although RadioGatún is a derivative of Panama, a stream cipher and hash construction from the late 1990s whose hash construction has been broken, RadioGatún does not have Panama&apos;s weaknesses when used as a hash function.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA</IRI>
        <Literal datatypeIRI="&xsd;string">Is a cryptographic hash function designed by the United States National Security Agency and is a U.S. Federal Information Processing Standard published by the United States NIST.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#SHA-0</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/SHA-1</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-0</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-0 is the original version of the 160-bit hash function published in 1993 under the name &quot;SHA&quot;.
</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#SHA-1</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/SHA-1</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-1</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-1 produces a 160-bit (20-byte) hash value. A SHA-1 hash value is typically rendered as a hexadecimal number, 40 digits long</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#SHA-2</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/SHA-2</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-2 is a set of cryptographic hash functions (SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-224</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-224 is a simply truncated version of the SHA-256 AND SHA-512, computed with different initial values.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-256</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-256 is a novel hash function computed with 32-bit words.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-384</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-384 is a simply truncated version of the SHA-256 AND SHA-512, computed with different initial values</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-512</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-512 is a novel hash function computed with 64-bit words.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-512/224</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-512/224 is a truncated version of SHA-512, but the initial values are generated using the method described in FIPS PUB 180-4</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-512/256</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-512/256 is a truncated version of SHA-512, but the initial values are generated using the method described in FIPS PUB 180-4</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#SHA-3</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/SHA-3</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-3</IRI>
        <Literal datatypeIRI="&xsd;string">Is a subset of the cryptographic primitive family Keccak, designed by Guido Bertoni, Joan Daemen, Michaël Peeters, and Gilles Van Assche, building upon RadioGatún.

</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#SNMP</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/SNMP</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SNMP</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Protocol from the application layer that allows admin info exchange between  network devices.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Scytale</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://www.uv.es/~montanan/redes/trabajos/enigma.pdf</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Scytale</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">System used by the spartans to send messages.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Search-in-key-space</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The class of attacks that systematically search possible keys. There are different types according to the size of the search space.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Simon</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Simon_%28cipher%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Simon</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Simon is a family of lightweight block ciphers publicly released by the NSA in June 2013.[2] Simon has been optimized for performance in hardware implementations, while its sister algorithm, Speck, has been optimized for software implementations. Simon is a balanced Feistel cipher.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Slide-attack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Slide_attack</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Slide-attack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The slide attack is a form of cryptanalysis designed to deal with the prevailing idea that even weak ciphers can become very strong by increasing the number of rounds, which can ward off a differential attack. The slide attack works in such a way as to make the number of rounds in a cipher irrelevant. Rather than looking at the data-randomizing aspects of the block cipher, the slide attack works by analyzing the key schedule and exploiting weaknesses in it to break the cipher. The most common one is the keys repeating in a cyclic manner.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#SocialEngineering</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Social_engineering_%28security%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SocialEngineering</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Psychological manipulation of people into performing actions or divulging confidential information.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#StreamCipher</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Stream_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#StreamCipher</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The data to be ciphered is processed one bit at a time.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Strong-Resistance</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Should be computationally infeasible to find D and D&apos; such that h(D) = h(D&apos;)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Substitution</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Substitute the letters from a message with others from an alphabet.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SubstitutionPermutation</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Essentially it consist of a series of mathematical operations that try to add Confusion (changing the original symbols of the text) and Diffusion (changing the original positions of such symbols).
These properties are the ones that try to support the security to the system.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SubstitutionPermutation</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Substitution-permutation_network</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Symmetric</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This type of cryptography employs the same key to cipher and decipher messages.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Synchronous</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Stream_cipher#Self-synchronizing_stream_ciphers</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Synchronous</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The key stream depends only on the key.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#TLS</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Transport_Layer_Security</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TLS</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Protocol used to transmit info safely by a network, includes the RC4 in his core.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Telephone-tapping</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Telephone_tapping</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Telephone-tapping</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Telephone tapping (also wire tapping or wiretapping in American English) is the monitoring of telephone and Internet conversations by a third party, often by covert means. The wire tap received its name because, historically, the monitoring connection was an actual electrical tap on the telephone line. Legal wiretapping by a government agency is also called lawful interception. Passive wiretapping monitors or records the traffic, while active wiretapping alters or otherwise affects it.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Text-autokey</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Uses the previous message text to determine the next element in the keystream. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Tiger</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/Tiger_%28cryptography%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Tiger</IRI>
        <Literal datatypeIRI="&xsd;string">Tiger is a cryptographic hash function designed by Ross Anderson and Eli Biham in 1995 for efficiency on 64-bit platforms.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Tiger-192/128/160</IRI>
        <Literal datatypeIRI="&xsd;string">The size of a Tiger hash value is 192 bits. Truncated versions (known as Tiger/128 and Tiger/160) can be used for compatibility with protocols assuming a particular hash size. Unlike the SHA-2 family, no distinguishing initialization values are defined; they are simply prefixes of the full Tiger/192 hash value.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Tiger2</IRI>
        <Literal datatypeIRI="&xsd;string">Is a variant where the message is padded by first appending a byte with the hexadecimal value of 0x80 as in MD4, MD5 and SHA, rather than with the hexadecimal value of 0x01 as in the case of Tiger.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Transposition</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">It only changes the order (permutates) of the symbols in the message.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Treyfer</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Treyfer</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Treyfer</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Treyfer is a block cipher/MAC designed in 1997 by Gideon Yuval. Aimed at smart card applications, the algorithm is extremely simple and compact; it can be implemented in just 29 bytes of 8051 machine code.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#TrojanHorse</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Trojan_horse_%28computing%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TrojanHorse</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is a generally non-self-replicating type of malware program containing malicious code that, when executed, carries out actions determined by the nature of the Trojan, typically causing loss or theft of data, and possible system harm. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Truncated-Differential-Cryptanalysis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Truncated_differential_cryptanalysis</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Truncated-Differential-Cryptanalysis</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">In cryptography, truncated differential cryptanalysis is a generalization of differential cryptanalysis, an attack against block ciphers. Lars Knudsen developed the technique in 1994. Whereas ordinary differential cryptanalysis analyzes the full difference between two texts, the truncated variant considers differences that are only partially determined. That is, the attack makes predictions of only some of the bits instead of the full block. This technique has been applied to SAFER, IDEA, Skipjack, E2, Twofish, Camellia, CRYPTON, and even the stream cipher Salsa20.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Twofish</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Twofish</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Twofish</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Twofish is a symmetric key block cipher with a block size of 128 bits and key sizes up to 256 bits. It was one of the five finalists of the Advanced Encryption Standard contest, but it was not selected for standardization. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Typex</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Typex</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Typex</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Were the British cipher machines used from 1937, It was an adaptation of the commercial German Enigma .</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#UES</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/UES_%28cipher%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#UES</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">In Cryptography, UES (Universal Encryption Standard) is a block cipher designed in 1999 by Helena Handschuh and Serge Vaudenay. They proposed it as a transitional step, to prepare for the completion of the AES process.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#UnconditionalSecurity</IRI>
        <Literal datatypeIRI="&xsd;string">A cryptosystem is unconditionally or information-theoretically secure if it cannot be broken even with infinite computational resources.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Unidirectional</IRI>
        <Literal datatypeIRI="&xsd;string">Knowing the hash of a document D, h(D), does not give any information about the original document. Thus, it is computationally infeasible to find D, given h(D).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Utility</IRI>
        <Literal datatypeIRI="&xsd;string">Utility means usefulness. For example, suppose someone encrypted data on disk to prevent unauthorized access or undetected modifications – and then lost the decryption key: that would be a breach of utility. The data would be confidential, controlled, integral, authentic, and available – they just wouldn’t be useful in that form.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Vigenere</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Vigenere</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is a method of encrypting alphabetic text by using a series of different Caesar ciphers based on the letters of a keyword. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#WAP</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Wireless_Application_Protocol</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#WAP</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Protocol used in wireless cards, includes the RC4 in his core.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#WEP</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">https://en.wikipedia.org/wiki/Wired_Equivalent_Privacy</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#WEP</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Protocol used in wireless cards, includes the RC4 in his core.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#WHIRLPOOL</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/WHIRLPOOL</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#WHIRLPOOL</IRI>
        <Literal datatypeIRI="&xsd;string">Whirlpool (sometimes styled WHIRLPOOL) is a cryptographic hash function. It was designed by Vincent Rijmen (co-creator of the Advanced Encryption Standard) and Paulo S. L. M. Barreto. The hash has been recommended by the NESSIE project. It has also been adopted by the International Organization for Standardization (ISO) and the International Electrotechnical Commission (IEC) as part of the joint ISO/IEC 10118-3 international standard.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Weak-Resistance</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Known D shoud be computationally infeasible to find D&apos; such that h(D) = h(D&apos;)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Wireless-Card</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Wireless_network_interface_controller</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Wireless-Card</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is a network interface which connects computers  in a network without wires.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#XOR</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Xor_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#XOR</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This algorithm makes the XOR operation between the plain-text bits and the key bits.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#XSL</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/XSL_attack</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#XSL</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">In Cryptography, the eXtended Sparse Linearization (XSL) attack is a method of cryptanalysis for block ciphers. The attack was first published in 2002 by researchers Nicolas Courtois and Josef Pieprzyk. It has caused some controversy as it was claimed to have the potential to break the Advanced Encryption Standard (AES) cipher, also known as Rijndael, faster than an exhaustive search. Since AES is already widely used in commerce and government for the transmission of secret information, finding a technique that can shorten the amount of time it takes to retrieve the secret message without having the key could have wide implications.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Zodiac</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Zodiac_%28cipher%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Zodiac</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">In cryptography, Zodiac is a block cipher designed in 2000 by Chang-Hyi Lee for the Korean firm SoftForum.
Zodiac uses a 16-round Feistel network structure with key whitening. The round function uses only XORs and S-box lookups. There are two 8×8-bit S-boxes: one based on the discrete exponentiation 45x as in SAFER, the other using the multiplicative inverse in the finite field GF(28), as introduced by SHARK.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#basedOn</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Defines a binary predicate to indicate what an object is inspired by. Used mainly to stablish relations between various versions or models of ciphers or protocols.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#basedOnCipher</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Binary predicate to indicate that a cipher is inspired by other ciphers.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#basedOnHash</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Binary predicate to indicate that some hash function is based on another</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#basedOnProtocol</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Binary predicate to indicate that a protocol is inspired by other protocols.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasProperty</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Defines a binary predicate to indicate that something owns or posseses something. Useful to define properties of objects</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#implements</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Indicates what mechanisms a protocol implements</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isBetterThan</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Generic comparative binary predicates</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#resistantTo</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Defines a binary predicate to indicate that a system&apos;s security is resistant to some attack(s).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#threatens</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Defines the inverse binary predicate of being vulnerable.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#vulnerableTo</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Defines a binary predicate to indicate that a system&apos;s security is vulnerable to some attack(s).</Literal>
    </AnnotationAssertion>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#reference"/>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
    </SubAnnotationPropertyOf>
</Ontology>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->

