<?xml version="1.0"?>


<!DOCTYPE Ontology [
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY xml "http://www.w3.org/XML/1998/namespace" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
]>


<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="http://www.semanticweb.org/SIA/crypontology"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     ontologyIRI="http://www.semanticweb.org/SIA/crypontology">
    <Prefix name="" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Declaration>
        <Class IRI="#3DES"/>
    </Declaration>
    <Declaration>
        <Class IRI="#A5/1"/>
    </Declaration>
    <Declaration>
        <Class IRI="#A5/2"/>
    </Declaration>
    <Declaration>
        <Class IRI="#AES"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ARC4"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ARCFOUR"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Active"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Affine"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Alberti"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Alleged_RC4"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Asymmetric"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Asynchronous"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Attacks"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Authenticity"/>
    </Declaration>
    <Declaration>
        <Class IRI="#AutoKey"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Availability"/>
    </Declaration>
    <Declaration>
        <Class IRI="#BlockCipher"/>
    </Declaration>
    <Declaration>
        <Class IRI="#BruteForceAttacks"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Caesar"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Collision_Resistant"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Computational_Security"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Confidentiality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Cryptography"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Cryptology"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DES"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DesirableProperties"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Devices"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DictionaryAttacks"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ECDH"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ECDSA"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Eavesdropping"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ElGamal"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ElGamal_elliptic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Enigma"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Feistel"/>
    </Declaration>
    <Declaration>
        <Class IRI="#GSM"/>
    </Declaration>
    <Declaration>
        <Class IRI="#GuessingAttacks"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HashFunctions"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Integrity"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Key-autokey"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Lorenz"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Lucifer"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Man_in_the_middle"/>
    </Declaration>
    <Declaration>
        <Class IRI="#MathematicalAnalysis"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Merkle_Hellman_knapsack"/>
    </Declaration>
    <Declaration>
        <Class IRI="#MonoAlphabetic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Non-Repudiation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#OTP"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ParkerianHexad"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Passive"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PolyAlphabetic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Possession"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Protocols"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RC4"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RFC-3826"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RSA"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SNMP"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Scytale"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Search_in_key_space"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SocialEngineering"/>
    </Declaration>
    <Declaration>
        <Class IRI="#StreamCipher"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Strong_Resistance"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Substitution"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SubstitutionPermutation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Symmetric"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Synchronous"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TLS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Text-autokey"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Transposition"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Typex"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UnconditionalSecurity"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Utility"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Vigenere"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WAP"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WEP"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Weak_Resistance"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Wireless_card"/>
    </Declaration>
    <Declaration>
        <Class IRI="#XOR"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#reference"/>
    </Declaration>
    <SubClassOf>
        <Class IRI="#3DES"/>
        <Class IRI="#Feistel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#A5/1"/>
        <Class IRI="#GSM"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#A5/2"/>
        <Class IRI="#GSM"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AES"/>
        <Class IRI="#SubstitutionPermutation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ARC4"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ARCFOUR"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Active"/>
        <Class IRI="#Attacks"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Affine"/>
        <Class IRI="#MonoAlphabetic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Alberti"/>
        <Class IRI="#PolyAlphabetic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Alleged_RC4"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Asymmetric"/>
        <Class IRI="#Cryptography"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Asynchronous"/>
        <Class IRI="#StreamCipher"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Attacks"/>
        <Class IRI="#Cryptology"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Authenticity"/>
        <Class IRI="#ParkerianHexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AutoKey"/>
        <Class IRI="#PolyAlphabetic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Availability"/>
        <Class IRI="#ParkerianHexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#BlockCipher"/>
        <Class IRI="#Symmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Broadcasting"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#BruteForceAttacks"/>
        <Class IRI="#Search_in_key_space"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Caesar"/>
        <Class IRI="#MonoAlphabetic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Collision_Resistant"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Computational_Security"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Confidentiality"/>
        <Class IRI="#ParkerianHexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Cryptography"/>
        <Class IRI="#Cryptology"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Cryptology"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DES"/>
        <Class IRI="#Feistel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DesirableProperties"/>
        <Class IRI="#Cryptography"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Devices"/>
        <Class IRI="#Cryptology"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DictionaryAttacks"/>
        <Class IRI="#Search_in_key_space"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ECDH"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ECDSA"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Easy_and_Fast_to_calculate"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Eavesdropping"/>
        <Class IRI="#Passive"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ElGamal"/>
        <Class IRI="#Asymmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ElGamal_elliptic"/>
        <Class IRI="#Asymmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Enigma"/>
        <Class IRI="#Devices"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Feistel"/>
        <Class IRI="#BlockCipher"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Fixed-length_digest"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#GOST"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#GSM"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#GuessingAttacks"/>
        <Class IRI="#Search_in_key_space"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HAVAL"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HashFunctions"/>
        <Class IRI="#Cryptography"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Integrity"/>
        <Class IRI="#ParkerianHexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Key-autokey"/>
        <Class IRI="#AutoKey"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Lorenz"/>
        <Class IRI="#Devices"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Lucifer"/>
        <Class IRI="#Feistel"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MD"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MD2"/>
        <Class IRI="#MD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MD4"/>
        <Class IRI="#MD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MD5"/>
        <Class IRI="#MD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Man_in_the_middle"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MathematicalAnalysis"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Merkle_Hellman_knapsack"/>
        <Class IRI="#Asymmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MonoAlphabetic"/>
        <Class IRI="#Substitution"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Non-Repudiation"/>
        <Class IRI="#ParkerianHexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#OTP"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PANAMA"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ParkerianHexad"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Passive"/>
        <Class IRI="#Attacks"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PolyAlphabetic"/>
        <Class IRI="#Substitution"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Possession"/>
        <Class IRI="#ParkerianHexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Protocols"/>
        <Class IRI="#Cryptography"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RC4"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RFC-3826"/>
        <Class IRI="#SNMP"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RIPEMD"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RIPEMD-128"/>
        <Class IRI="#RIPEMD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RIPEMD-128/256"/>
        <Class IRI="#RIPEMD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RIPEMD-160"/>
        <Class IRI="#RIPEMD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RIPEMD-320"/>
        <Class IRI="#RIPEMD"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RSA"/>
        <Class IRI="#Asymmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RTR0"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RadioGatun"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-0"/>
        <Class IRI="#SHA"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-1"/>
        <Class IRI="#SHA"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2"/>
        <Class IRI="#SHA"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-224"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-256"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-384"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-512"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-512/224"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-2-512/256"/>
        <Class IRI="#SHA-2"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-3"/>
        <Class IRI="#SHA"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-3-224"/>
        <Class IRI="#SHA-3"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-3-256"/>
        <Class IRI="#SHA-3"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-3-384"/>
        <Class IRI="#SHA-3"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SHA-3-512"/>
        <Class IRI="#SHA-3"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SNMP"/>
        <Class IRI="#Protocols"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Scytale"/>
        <Class IRI="#Transposition"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Search_in_key_space"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SocialEngineering"/>
        <Class IRI="#Active"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#StreamCipher"/>
        <Class IRI="#Symmetric"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Strong_Resistance"/>
        <Class IRI="#Collision_Resistant"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Substitution"/>
        <Class IRI="#Synchronous"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SubstitutionPermutation"/>
        <Class IRI="#BlockCipher"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Symmetric"/>
        <Class IRI="#Cryptography"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Synchronous"/>
        <Class IRI="#StreamCipher"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TLS"/>
        <Class IRI="#RC4"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Text-autokey"/>
        <Class IRI="#AutoKey"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Tiger"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Tiger-192/128/160"/>
        <Class IRI="#Tiger"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Tiger2"/>
        <Class IRI="#Tiger"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Transposition"/>
        <Class IRI="#Synchronous"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Typex"/>
        <Class IRI="#Devices"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UnconditionalSecurity"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Unidirectional"/>
        <Class IRI="#DesirableProperties"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Utility"/>
        <Class IRI="#ParkerianHexad"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Vigenere"/>
        <Class IRI="#PolyAlphabetic"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WAP"/>
        <Class IRI="#RC4"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WEP"/>
        <Class IRI="#RC4"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WHIRLPOOL"/>
        <Class IRI="#HashFunctions"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Weak_Resistance"/>
        <Class IRI="#Collision_Resistant"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Wireless_card"/>
        <Class IRI="#Devices"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#XOR"/>
        <Class IRI="#PolyAlphabetic"/>
    </SubClassOf>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#3DES</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Algorithm that makes DES three times.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#A5/1</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Implementation used in Europe and EEUU.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#A5/2</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Weak version used in many countries.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#AES</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Advanced_Encryption_Standard</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ARC4</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Non-official RSA protocol implementation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ARCFOUR</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Non-official RSA protocol implementation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Affine</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Affine_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Affine</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">In this algorithm each letter in an alphabet is mapped to its numeric equivalent, encrypted using a simple mathematical function, and converted back to a letter.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Alberti</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://es.wikipedia.org/wiki/Cifrado_de_Alberti</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Alberti</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Created by Leon Battista Alberti, is the first polyalphabetic substitution symmetric algorithm known.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Alleged_RC4</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Non-official RSA protocol implementation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Asymmetric</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This type of cryptography uses a private key for each user and a public key for everyone. The first is used to decipher and the second to cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Asynchronous</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The key steam also depends on the chipertext.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Attacks</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Several methods to find the key of a cryptographic algorithm or find the way to read the chipered text.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Authenticity</IRI>
        <Literal datatypeIRI="&xsd;string">Authenticity refers to the veracity of the claim of origin or authorship of the information.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#AutoKey</IRI>
        <Literal datatypeIRI="&xsd;string">http://cryptography.wikia.com/wiki/Autokey_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#AutoKey</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">An autokey cipher (also known as the autoclave cipher) is a cipher which incorporates the message (the plaintext) into the key.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Availability</IRI>
        <Literal datatypeIRI="&xsd;string">Availability means having timely access to information. For example, a disk crash or denial-of-service attacks both cause a breach of availability. Any delay that exceeds the expected service levels for a system can be described as a breach of availability.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#BlockCipher</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Cipher data in blocks instead bit by bit.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Broadcasting</IRI>
        <Literal datatypeIRI="&xsd;string">h(D) must involve every bit of D. If one bit is changed in D, h(D) should change about half of his bits.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Caesar</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Caesar_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Caesar</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is one of the simplest and most widely known encryption techniques.In the algorithm each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Collision_Resistant</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A h function will never be an injective function, therefore, always will exist collisions. Known  the pair (D, D&apos;) such that h(D)=h(D&apos;) we can distinguish between weak resistance and strong resistance.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Computational_Security</IRI>
        <Literal datatypeIRI="&xsd;string">Said of a cipher that cannot be broken with the current computer technology within a period short enough to be practicable</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Confidentiality</IRI>
        <Literal datatypeIRI="&xsd;string">Confidentiality refers to limits on who can get what kind of information.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Cryptology</IRI>
        <Literal datatypeIRI="&xsd;string">Cryptology is the science derived from Mathematics that is concerned with data communication and storage in a secure way.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#DES</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Data_Encryption_Standard</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DES</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Algorithm based in Lucifer.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DesirableProperties</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Properties that are desirable in criptographic functions or algorithms.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Devices</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Hardware devices that uses cryptographic algorithms</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ECDH</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The full name of this algorithm is EC Diffie-Hellman. Is based in the ElGamal elliptic algorithm.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ECDSA</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The full name of this protocol is EC Digital Signature Algorithm. Is based in the ELGamal elliptic algorithm</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Easy_and_Fast_to_calculate</IRI>
        <Literal datatypeIRI="&xsd;string">The algorithm is easy to calculate and fast to execute.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ElGamal</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Scheme based in discrete logarithm math problems, based in the Diffie-Hellman idea</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ElGamal_elliptic</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is like the classical ElGamal algorithm but uses elliptic arithmetic.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Enigma</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Enigma_machine</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Enigma</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Machine invented at the end of the first world war, it uses the Alberti algorithm</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Fixed-length_digest</IRI>
        <Literal datatypeIRI="&xsd;string">Summary size of h(D) should be fixed (defined by function), without depending on the size of D</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#GOST</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/GOST_%28hash_function%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#GOST</IRI>
        <Literal datatypeIRI="&xsd;string">is a 256-bit cryptographic hash function. It was initially defined in the Russian national standard GOST R 34.11-94 Information Technology - Cryptographic Information Security - Hash Function. The equivalent standard used by other member-states of the CIS is GOST 34.311-95.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#GSM</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Protocol used in the mobile communications.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#HAVAL</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/HAVAL</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#HAVAL</IRI>
        <Literal datatypeIRI="&xsd;string">Is a cryptographic hash function, can produce hashes of different lengths and hashes in lengths of 128 bits, 160 bits, 192 bits, 224 bits, and 256 bits. HAVAL also allows users to specify the number of rounds (3, 4, or 5) to be used to generate the hash. It was invented by Yuliang Zheng, Josef Pieprzyk, and Jennifer Seberry in 1992.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#HashFunctions</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/Cryptographic_hash_function</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#HashFunctions</IRI>
        <Literal datatypeIRI="&xsd;string">A cryptographic hash function is a hash function that takes an arbitrary block of data and returns a fixed-size bit string, the cryptographic hash value, such that any (accidental or intentional) change to the data will (with very high probability) change the hash value. The data to be encoded are often called the message, and the hash value is sometimes called the message digest or simply digest.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Integrity</IRI>
        <Literal datatypeIRI="&xsd;string">Integrity refers to being correct or consistent with the intended state of information. Any unauthorized modification of data, whether deliberate or accidental, is a breach of data integrity.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Key-autokey</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Uses previous members of the keystream to determine the next element in the keystream. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Lorenz</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Lorenz_SZ_40/42</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Lorenz</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">German Army Machine used during the second world war, it uses the Vernam algorithm.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Lucifer</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">First algorithm based in Feistel network.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MD</IRI>
        <Literal datatypeIRI="&xsd;string">Are a set of cryptographic hash functions developed by Ronald Rivest in 1989 (MD2), 1990 (MD4) and 1992 (MD5)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#MD2</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/MD2_%28cryptography%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MD2</IRI>
        <Literal datatypeIRI="&xsd;string">The algorithm is optimized for 8-bit computers.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#MD4</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/MD4</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MD4</IRI>
        <Literal datatypeIRI="&xsd;string">The digest length is 128 bits. The algorithm has influenced later designs, such as the MD5, SHA-1 and RIPEMD algorithms.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#MD5</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/MD5</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MD5</IRI>
        <Literal datatypeIRI="&xsd;string">The MD5 message-digest algorithm is a widely used cryptographic hash function producing a 128-bit (16-byte) hash value, typically expressed in text format as a 32 digit hexadecimal number. MD5 has been utilized in a wide variety of cryptographic applications, and is also commonly used to verify data integrity.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Merkle_Hellman_knapsack</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Based in the subset-sum problem, probably it was the first algorithm with public key.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#MonoAlphabetic</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">One letter is substituted by just one  letter.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Non-Repudiation</IRI>
        <Literal datatypeIRI="&xsd;string">Non-repudiation refers to a state of affairs where the purported maker of a statement will not be able to successfully challenge the validity of the statement or contract. If an attacker could repudiate a message we might not be able to identify such individual as malicious.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#OTP</IRI>
        <Literal datatypeIRI="&xsd;string">A steam cipher is called one-time pad if the key steam s0, s1, s2,.... is generated by a true random number generator (first condition), and the key steam is only known to the lefitimate communicating parties (second condition), and every key steam bit si is only user once.
The one-time pad is unconditionally secure. 
</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#PANAMA</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/PANAMA</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#PANAMA</IRI>
        <Literal datatypeIRI="&xsd;string"> Is a cryptography primitive which can be used both as a hash function and a stream cipher, the stream cipher uses a 256-bit key and the performance of the cipher is very good reaching 2 cycles per byte. Based on StepRightUp, it was designed by Joan Daemen and Craig Clapp and presented in the paper Fast Hashing and Stream Encryption with PANAMA on the Fast Software Encryption (FSE) conference 1998. The cipher has influenced several other designs, for example MUGI.
</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#ParkerianHexad</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Parkerian_hexad</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#PolyAlphabetic</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">One letter can be substituted by many letters.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Possession</IRI>
        <Literal datatypeIRI="&xsd;string">Refers to whether the information is controled by authorized individuals. A situation where someone steals a SEALED envelope without the possibility to open it, would imply a possession breach. We also could think about someone intercepting an encrypted email but not being able to decrypt it. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Protocols</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Implementations used today of different algorithms. Protocols are programs acepted as standar and used in differente applications.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RC4</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Official RSA based implementation, it can&apos;t be used with this name because the RSA Security has never  released the code,</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RFC-3826</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Implementation using AES</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#RIPEMD</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/RIPEMD</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RIPEMD</IRI>
        <Literal datatypeIRI="&xsd;string">RIPEMD (RACE Integrity Primitives Evaluation Message Digest) is a family of cryptographic hash functions developed in Leuven, Belgium, by Hans Dobbertin, Antoon Bosselaers and Bart Preneel at the COSIC research group at the Katholieke Universiteit Leuven, and first published in 1996. RIPEMD was based upon the design principles used in MD4, and is similar in performance to the more popular SHA-1.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RIPEMD-128</IRI>
        <Literal datatypeIRI="&xsd;string">Published in 1996. RIPEMD-128 was based upon the design principles used in MD4, and is similar in performance to the more popular SHA-1.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RIPEMD-128/256</IRI>
        <Literal datatypeIRI="&xsd;string">The 128-bit version was intended only as a drop-in replacement for the original RIPEMD, which was also 128-bit, and which had been found to have questionable security. The 256-bits versions diminish only the chance of accidental collision, and don&apos;t have higher levels of security.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RIPEMD-160</IRI>
        <Literal datatypeIRI="&xsd;string">Is a 160-bit version of the original RIPEMD, and the most common version in the family. RIPEMD-160 was designed in the open academic community.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RIPEMD-320</IRI>
        <Literal datatypeIRI="&xsd;string">The 320-bit versions diminish only the chance of accidental collision, and don&apos;t have higher levels of security (against preimage attacks) as compared to, respectively, RIPEMD-128 and RIPEMD-160.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RSA</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This algorithm is based in the difficulty to factorize big primes</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#RTR0</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/RTR0</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RTR0</IRI>
        <Literal datatypeIRI="&xsd;string">The RTR0 algorithm, originally build on Retter engine (eng. Savior) is a widely used cryptographic hash function producing a 160-bit (20-byte) hash value, typically expressed in text format as a 40 digit hexadecimal number.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#RadioGatun</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/RadioGat%C3%BAn</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#RadioGatun</IRI>
        <Literal datatypeIRI="&xsd;string">Is a cryptographic hash primitive created by Guido Bertoni, Joan Daemen, Michaël Peeters, and Gilles Van Assche. It was first publicly presented at the NIST Second Cryptographic Hash Workshop, held in Santa Barbara, California, on August 24–25, 2006, as part of the NIST hash function competition.
Although RadioGatún is a derivative of Panama, a stream cipher and hash construction from the late 1990s whose hash construction has been broken, RadioGatún does not have Panama&apos;s weaknesses when used as a hash function.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA</IRI>
        <Literal datatypeIRI="&xsd;string">Is a cryptographic hash function designed by the United States National Security Agency and is a U.S. Federal Information Processing Standard published by the United States NIST.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#SHA-0</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/SHA-1</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-0</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-0 is the original version of the 160-bit hash function published in 1993 under the name &quot;SHA&quot;.
</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#SHA-1</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/SHA-1</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-1</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-1 produces a 160-bit (20-byte) hash value. A SHA-1 hash value is typically rendered as a hexadecimal number, 40 digits long</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#SHA-2</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/SHA-2</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-2 is a set of cryptographic hash functions (SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-224</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-224 is a simply truncated version of the SHA-256 AND SHA-512, computed with different initial values.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-256</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-256 is a novel hash function computed with 32-bit words.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-384</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-384 is a simply truncated version of the SHA-256 AND SHA-512, computed with different initial values</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-512</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-512 is a novel hash function computed with 64-bit words.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-512/224</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-512/224 is a truncated version of SHA-512, but the initial values are generated using the method described in FIPS PUB 180-4</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-2-512/256</IRI>
        <Literal datatypeIRI="&xsd;string">SHA-512/256 is a truncated version of SHA-512, but the initial values are generated using the method described in FIPS PUB 180-4</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#SHA-3</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/SHA-3</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SHA-3</IRI>
        <Literal datatypeIRI="&xsd;string">Is a subset of the cryptographic primitive family Keccak, designed by Guido Bertoni, Joan Daemen, Michaël Peeters, and Gilles Van Assche, building upon RadioGatún.

</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SNMP</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Protocol from the application layer that allows admin info exchange between  network devices.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Scytale</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://www.uv.es/~montanan/redes/trabajos/enigma.pdf</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Scytale</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">System used by the spartans to send messages.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#StreamCipher</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Cipher data bit by bit in instead blocks.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Strong_Resistance</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Should be computationally infeasible to find D and D&apos; such that h(D) = h(D&apos;)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Substitution</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Substitute the letters from a message with others from an alphabet.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Symmetric</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This type of cryptography uses a key to chiper and decipher messages.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Synchronous</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The key steam depends only on the key.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TLS</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Protocol used to transmit info safely by a network, includes the RC4 in his core.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Text-autokey</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Uses the previous message text to determine the next element in the keystream. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Tiger</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/Tiger_%28cryptography%29</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Tiger</IRI>
        <Literal datatypeIRI="&xsd;string">Tiger is a cryptographic hash function designed by Ross Anderson and Eli Biham in 1995 for efficiency on 64-bit platforms.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Tiger-192/128/160</IRI>
        <Literal datatypeIRI="&xsd;string">The size of a Tiger hash value is 192 bits. Truncated versions (known as Tiger/128 and Tiger/160) can be used for compatibility with protocols assuming a particular hash size. Unlike the SHA-2 family, no distinguishing initialization values are defined; they are simply prefixes of the full Tiger/192 hash value.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Tiger2</IRI>
        <Literal datatypeIRI="&xsd;string">Is a variant where the message is padded by first appending a byte with the hexadecimal value of 0x80 as in MD4, MD5 and SHA, rather than with the hexadecimal value of 0x01 as in the case of Tiger.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Transposition</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">It changes the order of the letters in the message</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Typex</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Typex</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Typex</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Were the British cipher machines used from 1937, It was an adaptation of the commercial German Enigma .</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#UnconditionalSecurity</IRI>
        <Literal datatypeIRI="&xsd;string">A cryptosystem is unconditionally or information-theoretically secure if it cannot be broken even with infinite computational resources.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Unidirectional</IRI>
        <Literal datatypeIRI="&xsd;string">Known summarizes h(D) should be computationally infeasible to find D</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Utility</IRI>
        <Literal datatypeIRI="&xsd;string">Utility means usefulness. For example, suppose someone encrypted data on disk to prevent unauthorized access or undetected modifications – and then lost the decryption key: that would be a breach of utility. The data would be confidential, controlled, integral, authentic, and available – they just wouldn’t be useful in that form.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Vigenere</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Vigenere</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is a method of encrypting alphabetic text by using a series of different Caesar ciphers based on the letters of a keyword. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#WAP</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Protocol used in wireless cards, includes the RC4 in his core.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#WEP</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Protocol used in wireless cards, includes the RC4 in his core.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#WHIRLPOOL</IRI>
        <Literal datatypeIRI="&xsd;string">http://en.wikipedia.org/wiki/WHIRLPOOL</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#WHIRLPOOL</IRI>
        <Literal datatypeIRI="&xsd;string">Whirlpool (sometimes styled WHIRLPOOL) is a cryptographic hash function. It was designed by Vincent Rijmen (co-creator of the Advanced Encryption Standard) and Paulo S. L. M. Barreto. The hash has been recommended by the NESSIE project. It has also been adopted by the International Organization for Standardization (ISO) and the International Electrotechnical Commission (IEC) as part of the joint ISO/IEC 10118-3 international standard.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Weak_Resistance</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Known D shoud be computationally infeasible to find D&apos; such that h(D) = h(D&apos;)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#Wireless_card</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">http://en.wikipedia.org/wiki/Wireless_network_interface_controller</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Wireless_card</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is a network interface which connects computers  in a network without wires.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#reference"/>
        <IRI>#XOR</IRI>
        <Literal datatypeIRI="&xsd;string">https://en.wikipedia.org/wiki/Xor_cipher</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#XOR</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This algorithm makes the XOR operation between the plain-text bits and the key bits.</Literal>
    </AnnotationAssertion>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#reference"/>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
    </SubAnnotationPropertyOf>
</Ontology>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->

